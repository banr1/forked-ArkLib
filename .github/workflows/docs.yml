name: Build and Deploy Website to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v5

      # --- Lean and Blueprint Build ---
      - name: Cache Lean dependencies
        uses: actions/cache@v4
        with:
          path: ./.lake
          key: ${{ runner.os }}-lean-${{ hashFiles('lake-manifest.json') }}
          restore-keys: |
            ${{ runner.os }}-lean-

      - name: Build the project
        uses: leanprover/lean-action@v1.3.0
        with:
          lint: false

      - name: Build project documentation
        run: lake build ArkLib:docs
        env:
          DISABLE_EQUATIONS: 1

      - name: Build blueprint
        uses: xu-cheng/texlive-action@v3
        with:
          docker_image: ghcr.io/xu-cheng/texlive-full:20231201
          run: |
            apk update
            apk add --update make py3-pip git pkgconfig graphviz graphviz-dev gcc musl-dev
            git config --global --add safe.directory $GITHUB_WORKSPACE
            python3 -m venv env
            source env/bin/activate
            pip install --upgrade pip requests wheel
            pip install pygraphviz --global-option=build_ext --global-option="-L/usr/lib/graphviz/" --global-option="-R/usr/lib/graphviz/"
            pip install leanblueprint
            leanblueprint pdf
            leanblueprint web

      # --- Combine and Deploy ---
      - name: Prepare deployment directory
        run: |
          mkdir _deploy
          # Copy landing page
          cp home_page/index.html _deploy/
          # Create docs directory and copy Lean docs
          mkdir -p _deploy/docs
          cp -r ./.lake/build/doc/* _deploy/docs/
          # Copy blueprint
          cp blueprint/print/print.pdf _deploy/blueprint.pdf
          # Copy blueprint HTML
          mkdir -p _deploy/blueprint
          cp -r blueprint/web/* _deploy/blueprint/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./_deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
