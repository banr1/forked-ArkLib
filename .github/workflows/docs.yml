name: Build Documentation and Blueprint

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Cache Lean dependencies
        uses: actions/cache@v4
        with:
          path: ./.lake
          key: ${{ runner.os }}-lean-${{ hashFiles('lake-manifest.json') }}
          restore-keys: |
            ${{ runner.os }}-lean-

      - name: Build the project
        id: build-lean
        uses: leanprover/lean-action@v1.3.0
        with:
          # Do not run linter for now, too many errors
          lint: false

      - name: Build project documentation
        run: lake build ArkLib:docs
        env:
          DISABLE_EQUATIONS: 1

      - name: Build blueprint
        uses: xu-cheng/texlive-action@v3
        with:
          docker_image: ghcr.io/xu-cheng/texlive-full:20231201
          run: |
            apk update
            apk add --update make py3-pip git pkgconfig graphviz graphviz-dev gcc musl-dev
            git config --global --add safe.directory $GITHUB_WORKSPACE
            python3 -m venv env
            source env/bin/activate
            pip install --upgrade pip requests wheel
            pip install pygraphviz --global-option=build_ext --global-option="-L/usr/lib/graphviz/" --global-option="-R/usr/lib/graphviz/"
            pip install leanblueprint
            leanblueprint pdf -v

      - name: List blueprint output
        run: ls -R blueprint

      - name: Check blueprint declarations
        run: |
          ~/.elan/bin/lake exe checkdecls blueprint/lean_decls

      - name: Commit documentation and blueprint
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Copy docs
          rm -rf home_page/docs
          mkdir -p home_page/docs
          cp -r ./.lake/build/doc/* home_page/docs/

          # Copy blueprint
          cp blueprint/blueprint.pdf home_page/blueprint.pdf
          
          git add home_page/docs home_page/blueprint.pdf
          git diff --staged --quiet || git commit -m "docs: update documentation and blueprint [skip ci]"
          git push

